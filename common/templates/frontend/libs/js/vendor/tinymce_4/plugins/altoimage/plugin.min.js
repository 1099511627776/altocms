/**
 * plugin.js
 *
 * Copyright, Moxiecode Systems AB
 * Released under LGPL License.
 *
 * License: http://www.tinymce.com/license
 * Contributing: http://www.tinymce.com/contributing
 */

/*global tinymce:true */

tinymce.PluginManager.add('altoimage', function (editor) {

    var previewSize = 240;
    var uploadFormSelector = '#mce-plugin-altoimage';
    var uploadForm;
    var uploadFormHtml;
    var postRenderFunc;

    function showDialog(imageList) {
        var win, data, dom = editor.dom, imgElm = editor.selection.getNode();
        var nodeWith, nodeHeight;

        nodeWith = dom.getAttrib(imgElm, 'width');
        nodeHeight = dom.getAttrib(imgElm, 'height');

        if (imgElm.nodeName == 'IMG' && !imgElm.getAttribute('data-mce-object')) {
            data = {
                src: dom.getAttrib(imgElm, 'src'),
                alt: dom.getAttrib(imgElm, 'alt'),
                style: dom.getAttrib(imgElm, 'style'),
                align: dom.getAttrib(imgElm, 'align'),
                width: nodeWith,
                height: nodeHeight
            };
        } else {
            imgElm = null;
        }

        function getImageSize(url, callback) {
            var img = document.createElement('img');

            function done(width, height) {
                img.parentNode.removeChild(img);
                callback({width: width, height: height});
            }

            img.onload = function () {
                done(img.clientWidth, img.clientHeight);
            };

            img.onerror = function () {
                done();
            };

            img.src = url;

            var style = img.style;
            style.visibility = 'hidden';
            style.position = 'fixed';
            style.bottom = style.left = 0;
            style.width = style.height = 'auto';

            document.body.appendChild(img);
        }

        function resetUploadForm() {

            uploadForm = $(uploadFormSelector).find('.js-topic-image-upload-form');
            uploadForm.find('.b-topic-image-wrapper').css({ width: previewSize, height: previewSize });
            uploadForm.find('.b-topic-image-tools').css({ marginLeft: previewSize + 15 });
            ls.img.ajaxUploadInit({
                selectors: {
                    form: '.js-topic-image-upload-form',
                    input_file: '.js-topic-image-upload-file'
                },
                urls: {
                    upload: ls.actionUrl('ajax') + 'upload/image/',
                },
            });
            var img = uploadForm.find('.js-ajax-image-upload-image').hide();
            uploadForm.find('.js-topic-image-upload-file').on('change', function () {
                img.removeAttr('style').hide();
            });
            img.on('load', function () {
                var img = $(this);
                var w = img.width();
                var h = img.height();
                var scale = previewSize / ((w > h) ? w : h);
                if (scale < 1) {
                    img.css({ 'height': h * scale, 'width': w * scale });
                    if (h * scale < previewSize) {
                        img.css({ marginTop: Math.floor((previewSize - h * scale) / 2) });
                    }
                } else {
                    img.css({ 'height': h, 'width': w });
                    if (h < previewSize) {
                        img.css({ marginTop: Math.floor((previewSize - h) / 2) });
                    }
                }
                uploadForm.find('[name=image_width]').val(w);
                uploadForm.find('[name=image_height]').val(h);
                img.fadeIn();
            });
            if (imgElm) {
                var style = dom.parseStyle($(imgElm).attr('data-mce-style'));
                img.prop('src', data.src);
                uploadForm.find('[name=image_width]').val(data.width);
                uploadForm.find('[name=image_height]').val(data.height);
                uploadForm.find('[name=image_title]').val(data.alt);
                var align = null;
                if (style.float) {
                    align = style.float;
                } else if (data.align) {
                    align = data.align;
                }
                var inputAlign = uploadForm.find('[name=image_align]').prop('checked', false);
                switch (align) {
                    case 'left':
                        inputAlign.filter('[value=left]').prop('checked', true);
                        break;
                    case 'right':
                        inputAlign.filter('[value=right]').prop('checked', true);
                        break;
                    default :
                        inputAlign.filter('[value=bottom]').prop('checked', true);
                        break;
                }
            }
        }

        function getBodyHtml() {
            var html = '';
            if (uploadFormHtml) {
                html = '<div id="mce-plugin-altoimage">' + uploadFormHtml + '</div>';
                postRenderFunc = resetUploadForm;
            } else {
                html = '<div id="mce-plugin-altoimage" class="loading"></div>';
                ls.ajaxGet(ls.actionUrl('ajax') + 'fetch/mce.image_upload', null, function (data) {
                    var div = $(uploadFormSelector);
                    uploadFormHtml = data.sHtml;
                    $(uploadFormSelector).removeClass('loading').html(uploadFormHtml);
                    resetUploadForm();
                });
                postRenderFunc = null;
            }
            return html;
        }

        // Simple default dialog
        win = editor.windowManager.open({
            title: 'Insert/edit image',
            data: data,
            width: 620,
            height: 340,
            html: getBodyHtml(),
            buttons: [
                {
                    text: imgElm ? 'Update Image' : 'Insert Image',
                    subtype: 'primary',
                    onclick: function (e) {
                        submitImg();
                        this.parent().parent().close();
                    }
                },
                {
                    text: 'Cancel',
                    onclick: function () {
                        this.parent().parent().close();
                    }
                }
            ],
            onPostRender: function () {
                if (postRenderFunc) {
                    postRenderFunc();
                }
            }
        });

        function submitImg(src) {

            var attr = {};
            attr['src'] = uploadForm.find('.js-ajax-image-upload-image').prop('src');
            attr['alt'] = attr['title'] = uploadForm.find('[name=image_title]').val();
            attr['width'] = uploadForm.find('[name=image_width]').val();
            attr['height'] = uploadForm.find('[name=image_height]').val();
            var align = uploadForm.find('[name=image_align]:checked').val();
            if (align == 'left' || align == 'right') {
                //attr['style'] = 'float:' + align;
                attr['align'] = align;
            }

            markup = '<img ';
            $.each(attr, function (idx, val) {
                markup += idx + '="' + val + '" ';
            });
            markup += '/>';
            editor.insertContent(markup);
        }
    }

    editor.addButton('altoimage', {
        icon: 'image',
        tooltip: 'Insert/edit image',
        onclick: showDialog,
        stateSelector: 'img:not([data-mce-object])'
    });

});